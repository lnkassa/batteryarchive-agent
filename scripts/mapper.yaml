#FORMAT
#tester : file/tester type
#read_func : function 
#column_dictionary:
#  schema col 1 : file col 1
#  schema col 2 : file col 2

tester : arbin
reader_func : read_excel
column_names:
  cycle_index : Cycle_Index
  test_time : Test_Time(s)
  i : Current(A)
  v : Voltage(V)
  date_time : Date_Time
unit_multipliers:
  A : 1
  V : 1
  s : 1
---
tester : json
reader_func : read_json
column_names:
    cycle_index : Cycle number
    test_time : Test [s]
    i : Current [mA]
    v : Voltage [V]
---
tester: voltaiq
reader_func : read_csv
column_names:
    cycle_index : Cycle Number
    test_time : Test Time(s)
    i : Current (A)
    v : Potential (V)
    date_time : '[Maccor] Datapoint Time'
---
tester : matlab #how to choose file from df (this could also apply to modules)
column_names:
  cycle_index : cycle_number
  test_time : t
  i : I
  v : V
---
tester : csv_ISU-ILCC #question: 'Time [s]' needs to be calculated from 'Timestamp'
reader_func : read_csv
#can add date time conversion function that is kept in yaml as necessary
column_names:
    cycle_index : Cycle #test_time : Time [s] #doesn't exist, needs preprocessing
    i : Current (A)
    v : Voltage (V)
    date_time : Timestamp #may need to preprocess data if some columns don't exist
    Qc : Capacity (Ah)
    Qd : Capacity (Ah)
---
tester : csv_TON-KIT
reader_func : read_csv
column_names:
  cycle_index : cycle number
  test_time : time/s
  i : <I>/mA
  v : Ecell/V
  Qc : Q charge/mA.h
  Qd : Q discharge/mA.h
unit_multipliers:
  A : 1000
  V : 1
  s : 1
---
tester : csv_XCEL
reader_func : read_csv
column_names:
    cycle_index : cycle_index
    test_time : test_time
    i : i
    v : v
    date_time : date_time
    env_temperature : env_temperature

